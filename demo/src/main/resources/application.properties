spring.application.name=Spring + MySQL + Angular

#MySql Workbench has to be open if not yet dockerized
#grabs source, username, and password from mySQL Workbench. Creating schema - testdb

spring.datasource.url = jdbc:mysql://localhost:3306/testdb?useSSL=false
spring.datasource.username = root
spring.datasource.password = password

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always


#hibernate ddl auto (create, create-drop, validate, update)
#used for database initialization. set to update so table will be created in database automatically corresponding to data model
spring.jpa.hibernate.ddl-auto=update

#------------------------------------------------------------------#
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-ui
# spring.datasource.url=jdbc:h2:mem:test;MODE=MySQL;
# spring.datasource.driver-class-name=org.h2.Driver
# We add the MySQL Dialect so that it understands and generates the query based on MySQL
# spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

#spring.jpa.defer-datasource-initialization=true
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

#spring.sql.init.mode=always
